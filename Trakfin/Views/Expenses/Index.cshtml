@model Trakfin.Models.ExpenseViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Expenses" asp-action="Index" method="get">
    <p>
        <select asp-for="BankName" asp-items="Model.BankList">
            <option value="">Bank Name</option>
        </select>

        <select asp-for="CategoryName" asp-items="Model.CategoryList">
            <option value="">Category</option>
        </select>

        Start Date: <input asp-for="StartDate" type="date" name="StartDate" />
        End Date: <input asp-for="EndDate" type="date" name="EndDate" />

        Title: <input asp-for="SearchString" type="text" name="SearchString" />

        <input type="submit" value="Filter" />

        <a asp-area="" asp-controller="Expenses" asp-action="Index">Clear all filters</a>
        
    </p>
</form>

<a href="@Url.Action("Create", "CustomFilters", new { 
             BankName = Context.Request.Query["BankName"], 
             CategoryName = Context.Request.Query["CategoryName"], 
             StartDate = Context.Request.Query["StartDate"], 
             EndDate = Context.Request.Query["EndDate"], 
             SearchString = Context.Request.Query["SearchString"] 
         })">Create custom filter from applied filters</a>

@if (Model.CustomFilters != null && Model.CustomFilters.Any())
{
    <h2>Custom Filters</h2>

    <table>
        <thead>
            <tr>
                <th>Bank</th>
                <th>Category</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Title</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.CustomFilters != null)
            {
                @foreach (var filter in Model.CustomFilters)
                {
                    <tr>
                        <td>@filter.Bank</td>
                        <td>@filter.Category</td>
                        <td>@filter.StartDate?.ToString("dd/MM/yyyy")</td>
                        <td>@filter.EndDate?.ToString("dd/MM/yyyy")</td>
                        <td>@filter.Title</td>
                        <td>
                            <a href="@Url.Action("Index", "Expenses", new { BankName = filter.Bank, CategoryName = filter.Category, StartDate = filter.StartDate, EndDate = filter.EndDate, SearchString = filter.Title })">Apply custom filter</a>
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", "CustomFilters", new {Id = filter.Id})">Edit</a>
                        </td>
                        <td>
                            <a href="@Url.Action("Delete", "CustomFilters", new {Id = filter.Id})">Delete</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}


@if (Model.RecurringTransactions != null && Model.RecurringTransactions.Any())
{
    <h2>Recurring Transactions</h2>

    <table>
        <thead>
            <tr>
                <th>Title</th>
                <th>Amount</th>
                <th>Bank</th>
                <th>Category</th>
                <th>Payment Method</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.RecurringTransactions != null)
            {
                foreach (var expense in Model.RecurringTransactions)
                {
                    <tr>
                        <td>@expense.Title</td>
                        <td>@expense.Price</td>
                        <td>@expense.Bank</td>
                        <td>@expense.Category</td>
                        <td>@expense.PaymentMethod</td>
                        <td>
                            <a class="addRecurring" href="@Url.Action("Create", "Expenses", new { title = expense.Title, price = expense.Price, bank = expense.Bank, category = expense.Category, paymentMethod = expense.PaymentMethod, recurring = expense.Recurring })">Add transaction</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@if (Model.Expenses != null && Model.Expenses.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">@Html.DisplayNameFor(model => model.Expenses![0].Title)</a>
                </th>
                <th>

                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.Expenses![0].Date)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].Bank)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].Note)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].PaymentMethod)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].Recurring)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].MerchantOrVendor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].Tags)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Expenses![0].Budget)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Expenses!)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Bank)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentMethod)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Recurring)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MerchantOrVendor)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Tags)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Budget!.Name)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No results found</p>
}
