services:
  # PRODUCTION BUILD
  watchtowerprod:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  reverseproxyprod:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.resolver.acme.tlschallenge=true"
      - "--certificatesresolvers.resolver.acme.email=${CERTIFICATE_EMAIL}"
      - "--certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      # Web UI port
      - "8080:8080"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    profiles: ["prod"]

  trakfinwebprod:
    image: ${DOCKER_REGISTRY-}trakfinweb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trakfinwebprod.rule=Host(`${TRAEFIK_WEB_URL_PROD}`)"
      - "traefik.http.routers.trakfinwebprod.entrypoints=websecure"
      - "traefik.http.routers.trakfinwebprod.tls.certresolver=resolver"
      - "com.centurylinklabs.watchtower.enable=true"
    build:
      context: ../Trakfin
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    environment:
      - ConnectionStrings__TrakfinContext=${CONNECTION_STRING_PROD}
      - API_URL=${API_URL_PROD}
    depends_on:
      - trakfinapiprod
    profiles: ["prod"]

  trakfinapiprod:
    image: ${DOCKER_REGISTRY-}trakfinapi
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trakfinapiprod.rule=Host(`${TRAEFIK_API_URL_PROD}`)"
      - "traefik.http.routers.trakfinapiprod.entrypoints=websecure"
      - "traefik.http.routers.trakfinapiprod.tls.certresolver=resolver"
      - "com.centurylinklabs.watchtower.enable=true"
    build:
      context: ../TrakfinAPI
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    environment:
      - ConnectionStrings__TrakfinContext=${CONNECTION_STRING_PROD}
    profiles: ["prod"]

  # DEVELOPMENT BUILD
  reverseproxydev:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      # Web UI port
      - "8080:8080"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    profiles: ["dev"]

  trakfinapidev:
    image: ${DOCKER_REGISTRY-}trakfinapi
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trakfinapidev.rule=Host(`${TRAEFIK_API_URL_DEV}`)"
      - "traefik.http.routers.trakfinapidev.entrypoints=web"
    build:
      context: ../TrakfinAPI
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__TrakfinContext=${CONNECTION_STRING_DEV}
    profiles: ["dev"]

  trakfinwebdev:
    image: ${DOCKER_REGISTRY-}trakfinweb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trakfinapiprod.rule=Host(`${TRAEFIK_WEB_URL_DEV}`)"
      - "traefik.http.routers.trakfinapiprod.entrypoints=web"
    build:
      context: ../Trakfin
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__TrakfinContext=${CONNECTION_STRING_DEV}
      - API_URL=${API_URL_DEV}
    depends_on:
      - trakfinapidev
      - sql
    profiles: ["dev"]

  sql:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: sql_server2022
    volumes:
      - sqlserver_data:/var/opt/mssql
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=A&VeryComplex123Password
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P 'A&VeryComplex123Password' -Q -C 'SELECT 1' || exit 1",
        ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    profiles: ["dev"]

volumes:
  sqlserver_data:
  letsencrypt:
